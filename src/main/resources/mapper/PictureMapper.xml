<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.gq.bbpic.dao.PictureMapper" >
  <resultMap id="BaseResultMap" type="edu.gq.bbpic.pojo.Picture" >
    <constructor >
      <idArg column="picture_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pic_list_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="thumbnail_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="od_url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="praise_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="collect_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="enable" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="creation_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="heat" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    picture_id, pic_list_id, user_id, thumbnail_url, od_url, praise_num,
    collect_num, enable, creation_time, heat
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from picture
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </select>
  <select id="selectNew" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from picture where enable = #{enable}
    order by creation_time desc
    limit #{left},#{right}
  </select>
  <select id="selectNewByCategory" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from picture p, tag t
    where enable = #{enable}
    and t.category_id = #{categoryId}
    and t.object_type = 0
    and t.object_id = p.picture_id
    order by creation_time desc
    limit #{left},#{right}
  </select>
  <select id="selectHot" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from picture where enable = #{enable}
    order by heat desc
    limit #{left},#{right}
  </select>
  <select id="selectHotByCategory" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from picture p, tag t
    where enable = #{enable}
    and t.category_id = #{categoryId}
    and t.object_type = 0
    and t.object_id = p.picture_id
    order by heat desc
    limit #{left},#{right}
  </select>
  <select id="selectByPicListId" resultMap="BaseResultMap" parameterType="Integer" >
    select
    <include refid="Base_Column_List" />
    from picture
    where pic_list_id = #{picListId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from picture
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.gq.bbpic.pojo.Picture" useGeneratedKeys="true" keyProperty="pictureId">
    insert into picture (pic_list_id,
      user_id, thumbnail_url, od_url, 
      praise_num, collect_num, enable, 
      creation_time, heat)
    values (#{picListId,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER}, #{thumbnailUrl,jdbcType=VARCHAR}, #{odUrl,jdbcType=VARCHAR}, 
      #{praiseNum,jdbcType=INTEGER}, #{collectNum,jdbcType=INTEGER}, #{enable,jdbcType=INTEGER}, 
      now(), #{heat,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="edu.gq.bbpic.pojo.Picture" >
    update picture
    <set >
      <if test="picListId != null" >
        pic_list_id = #{picListId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="thumbnailUrl != null" >
        thumbnail_url = #{thumbnailUrl,jdbcType=VARCHAR},
      </if>
      <if test="odUrl != null" >
        od_url = #{odUrl,jdbcType=VARCHAR},
      </if>
      <if test="praiseNum != null" >
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null" >
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="heat != null" >
        heat = #{heat,jdbcType=INTEGER},
      </if>
    </set>
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.gq.bbpic.pojo.Picture" >
    update picture
    set pic_list_id = #{picListId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      thumbnail_url = #{thumbnailUrl,jdbcType=VARCHAR},
      od_url = #{odUrl,jdbcType=VARCHAR},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      collect_num = #{collectNum,jdbcType=INTEGER},
      enable = #{enable,jdbcType=INTEGER},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      heat = #{heat,jdbcType=INTEGER}
    where picture_id = #{pictureId,jdbcType=INTEGER}
  </update>
</mapper>